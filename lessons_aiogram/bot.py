# –∏–º–ø–æ—Ä—Ç—ã
import asyncio
import logging
import sys
import json
import aiohttp
from config_reader import config
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command  import Command

# –î–ª—è –∑–∞–ø–∏—Å–µ–π —Å —Ç–∏–ø–æ–º Secret* –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ 
# –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥ get_secret_value(), 
# —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–º–µ—Å—Ç–æ '*******'
bot = Bot(token=config.bot_token.get_secret_value())

# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test1
@dp.message(Command("test1"))
async def cmd_test1(message: types.Message):
    await message.reply("Test 1")



# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test2
# –•—ç–Ω–¥–ª–µ—Ä cmd_test2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç.–∫. –¥–∏—Å–ø–µ—Ç—á–µ—Ä –æ –Ω—ë–º –Ω–µ –∑–Ω–∞–µ—Ç. –ò—Å–ø—Ä–∞–≤–∏–º —ç—Ç—É –æ—à–∏–±–∫—É –∏ –æ—Ç–¥–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é:
async def cmd_test2(message: types.Message):
    await message.reply("Test 2")










# –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–π —Å–∞—Ö–∞—Ä
# –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ —á–∏—â–µ –∏ —á–∏—Ç–∞–±–µ–ª—å–Ω–µ–µ, aiogram —Ä–∞—Å—à–∏—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Telegram. 
# –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–º–µ—Å—Ç–æ bot.send_message(...) –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å message.answer(...) –∏–ª–∏ message.reply(...). 
# –í –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–≤—É—Ö —Å–ª—É—á–∞—è—Ö –Ω–µ –Ω—É–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å chat_id, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω —Ç–∞–∫–æ–π –∂–µ, –∫–∞–∫ –∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.

# –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É answer –∏ reply –ø—Ä–æ—Å—Ç–∞—è: 
# –ø–µ—Ä–≤—ã–π –º–µ—Ç–æ–¥ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, –≤—Ç–æ—Ä–æ–π –¥–µ–ª–∞–µ—Ç "–æ—Ç–≤–µ—Ç" –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ message:

@dp.message(Command("answer"))
async def cmd_answer(message: types.Message):
    await message.answer("–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")


@dp.message(Command("reply"))
async def cmd_reply(message: types.Message):
    await message.reply('–≠—Ç–æ –æ—Ç–≤–µ—Ç —Å "–æ—Ç–≤–µ—Ç–æ–º"')



#==================================================================================================
# answer –º–µ—Ç–æ–¥


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É answer dice
@dp.message(Command("dice"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


# –û–¥–Ω–∞–∫–æ, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å, –∫–∞–∫–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ –≤—ã–±—Ä–æ—à–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–±—ã—Ç–∏–µ  dice .  
@dp.message(type.ContentTypes.DICE)
async def handle_dice(message: types.Message):
    dice_value = message.dice.value  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –≤—ã–±—Ä–æ—à–µ–Ω–Ω–æ–µ –∫—É–±–∏–∫–æ–º
    await message.answer(f"–í—ã –≤—ã–±—Ä–æ—Å–∏–ª–∏: {dice_value}")
   

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É answer send_animation
@dp.message(Command("send_animation"))
async def send_animation(message: types.Message):
    try:
        animation_url = "https://i.natgeofe.com/k/63b1a8a7-0081-493e-8b53-81d01261ab5d/red-panda-full-body_4x3.jpg"
        await message.answer_animation(animation_url)
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ animation: {e}")









#==================================================================================================
# –ü–µ—Ä–µ–¥–∞—á–∞ –¥–æ–ø. –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤¬∂

# –ì–¥–µ-—Ç–æ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
# –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ç–æ—á–∫–µ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
from datetime import datetime


# bot = ...
dp["started_at"] = datetime.now().strftime("%Y-%m-%d %H:%M")



@dp.message(Command("add_to_list"))
async def cmd_add_to_list(message: types.Message, mylist: list[int]):
    mylist.append(7)
    await message.answer("–î–æ–±–∞–≤–ª–µ–Ω–æ —á–∏—Å–ª–æ 7")


@dp.message(Command("show_list"))
async def cmd_show_list(message: types.Message, mylist: list[int]):
    await message.answer(f"–í–∞—à —Å–ø–∏—Å–æ–∫: {mylist}")


@dp.message(Command("info"))
async def cmd_info(message: types.Message, started_at: str):
    await message.answer(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω {started_at}")






#==================================================================================================

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    # –ì–¥–µ-—Ç–æ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main(): –æ—Ç–¥–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –•—ç–Ω–¥–ª–µ—Ä cmd_test2
    dp.message.register(cmd_test2, Command("test2"))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
    # await dp.start_polling(bot)
    await dp.start_polling(bot, mylist=[1, 2, 3])


# ÔøΩÔøΩ–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
if __name__ == "__main__":
    asyncio.run(main())
