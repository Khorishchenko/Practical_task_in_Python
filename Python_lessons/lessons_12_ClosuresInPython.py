# Замикання в Python – це вкладена функція, яка дозволяє отримати доступ до змінних зовнішньої функції навіть після завершення виконання зовнішньої функції. 
# Перш ніж ми поговоримо про замикання, спочатку розглянемо концепцію вкладених функцій в Python.
# https://acode.com.ua/closure-python/


# Вкладені функції в Python
# В Python ми можемо створити функцію всередині іншої функції — це називається вкладеною функцією. Наприклад:

def greet(name):
    # Внутрішня функція
    def display_name():
        print("Hi", name)
    
    # Виклик внутрішньої функції
    display_name()
 
# Виклик зовнішньої функції
greet("John") 










# Замикання в Python
# Замикання — це вкладена функція, яка допомагає отримати доступ до змінних зовнішньої функції навіть після завершення виконання зовнішньої функції. 


# Наприклад:


def greet():
    # Змінна, визначена поза внутрішньою функцією
    name = "John"
    
    # Повертаємо вкладену анонімну функцію
    return lambda: "Hi " + name
 
# Виклик зовнішньої функції
message = greet()
 
# Виклик внутрішньої функції
print(message())


# Ми можемо отримати доступ до змінної name зовнішньої функції (навіть після того, як вона завершила своє виконання).

# Це можливо через те, що вкладена функція тепер діє як замикання, 
# яке закриває змінну всередині своєї області видимості навіть після завершення виконання зовнішньої функції.













# Розглянемо ще один приклад замикання в Python. Програма для виводу непарних чисел:

def calculate():
    num = 1
    def inner_func():
        nonlocal num
        num += 2
        return num
    return inner_func
 
# Виклик зовнішньої функції
odd = calculate()
 
# Виклик внутрішньої функції
print(odd())
print(odd())
print(odd())
 
# Знову виклик зовнішньої функції
odd2 = calculate()
print(odd2())



# Результат:

# 3
# 5
# 7
# 3

# Наступний рядок коду виконує зовнішню функцію calculate() та повертає замикання змінної num:

# odd = calculate()
# Саме тому ми можемо отримати доступ до змінної num з функції calculate() навіть після завершення її виконання.

# Знову ж таки, коли ми викликаємо зовнішню функцію, використовуючи:
# odd2 = calculate()
# Повертається нове замикання. Отже, при виклику функції odd2() ми отримуємо значення 3.



